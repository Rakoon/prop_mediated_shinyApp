[{"name":"app.R","content":"# app.R\r\n# Simple mediation: 1 X, 1 M, 1 Y\r\n# Inputs: a, b, c' (means) and their standard errors\r\n# Output: point estimate of proportion mediated (PM) and Monte Carlo CIs\r\n\r\nlibrary(shiny)\r\n\r\npm_mc <- function(a, b, cprime, se_a, se_b, se_cprime,\r\n                  nsims = 100000, seed = 123){\r\n  stopifnot(se_a >= 0, se_b >= 0, se_cprime >= 0, nsims > 1000)\r\n  set.seed(seed)\r\n  # Draw from normal sampling distributions\r\n  A  <- rnorm(nsims, mean = a, sd = se_a)\r\n  B  <- rnorm(nsims, mean = b, sd = se_b)\r\n  CP <- rnorm(nsims, mean = cprime, sd = se_cprime)\r\n  \r\n  AB <- A * B\r\n  C  <- AB + CP  # total effect c\r\n  \r\n  # Avoid division by zero / instability around 0\r\n  eps <- .Machine$double.eps^0.25\r\n  denom <- pmax(abs(C), eps) * sign(C)  # keep sign, guard tiny values\r\n  \r\n  PM <- AB / denom\r\n  \r\n  # Trim extreme explosions from near-zero totals (optional, tweak if desired)\r\n  PM[is.nan(PM) | is.infinite(PM)] <- NA\r\n  list(\r\n    point = (a*b) / (a*b + cprime),\r\n    ci90  = quantile(PM, probs = c(.05, .95), na.rm = TRUE),\r\n    ci95  = quantile(PM, probs = c(.025, .975), na.rm = TRUE),\r\n    ci99  = quantile(PM, probs = c(.005, .995), na.rm = TRUE),\r\n    draws = PM\r\n  )\r\n}\r\n\r\nui <- fluidPage(\r\n  titlePanel(\"Proportion Mediated (α) – Monte Carlo CI\"),\r\n  sidebarLayout(\r\n    sidebarPanel(\r\n      h4(\"Coefficients\"),\r\n      numericInput(\"a\",  \"a (X→M)\", value = 0.30, step = 0.01),\r\n      numericInput(\"b\",  \"b (M→Y)\", value = 0.40, step = 0.01),\r\n      numericInput(\"cp\", \"c' (X→Y direct)\", value = 0.20, step = 0.01),\r\n      \r\n      h4(\"Standard Errors\"),\r\n      numericInput(\"sea\",  \"SE(a)\", value = 0.05, min = 0, step = 0.005),\r\n      numericInput(\"seb\",  \"SE(b)\", value = 0.05, min = 0, step = 0.005),\r\n      numericInput(\"secp\", \"SE(c')\", value = 0.05, min = 0, step = 0.005),\r\n      \r\n      h4(\"Simulation\"),\r\n      numericInput(\"nsims\", \"Number of draws\", value = 100000, min = 5000, step = 5000),\r\n      numericInput(\"seed\", \"Seed\", value = 123, step = 1),\r\n      helpText(\"PM = (a·b) / (a·b + c') in a simple mediation model where c = a·b + c'.\")\r\n    ),\r\n    mainPanel(\r\n      h4(\"Results\"),\r\n      verbatimTextOutput(\"summary\"),\r\n      plotOutput(\"hist\", height = 260)\r\n    )\r\n  )\r\n)\r\n\r\nserver <- function(input, output, session){\r\n  \r\n  calc <- reactive({\r\n    pm_mc(input$a, input$b, input$cp,\r\n          input$sea, input$seb, input$secp,\r\n          nsims = input$nsims, seed = input$seed)\r\n  })\r\n  \r\n  output$summary <- renderPrint({\r\n    res <- calc()\r\n    cat(sprintf(\"Point estimate PM: %.4f\\n\", res$point))\r\n    cat(sprintf(\"90%% CI: [%.4f, %.4f]\\n\", res$ci90[1], res$ci90[2]))\r\n    cat(sprintf(\"95%% CI: [%.4f, %.4f]\\n\", res$ci95[1], res$ci95[2]))\r\n    cat(sprintf(\"99%% CI: [%.4f, %.4f]\\n\", res$ci99[1], res$ci99[2]))\r\n  })\r\n  \r\n  output$hist <- renderPlot({\r\n    res <- calc()\r\n    pm <- res$draws\r\n    pm <- pm[is.finite(pm)]\r\n    hist(pm, breaks = 80, main = \"Monte Carlo draws of PM\", xlab = \"PM\")\r\n    abline(v = res$point, lwd = 2)\r\n    abline(v = res$ci95, lty = 2)\r\n  })\r\n}\r\n\r\nshinyApp(ui, server)\r\n","type":"text"}]
